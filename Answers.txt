What is the purpose of the various auxiliary methods populateList, populateFifoList, and ReverseLines.printReverse?
to use recursion to print out items instead of using a loop.


Why do these methods need to have arguments, and how does the argument change from one recursive call to the next?
To call themselves until a base case is reached. The argument changes by going from one node to the next.


What are the time and space complexity of each of the populateList populateFifoList methods, as well as ReverseLines.printReverse?
populateList
Time = O(N)
Space = O(N)

populateFifoList
Time = O(N)
Space = O(N)

ReverseLines.printReverse
Time = O(N)
Space = O(N)


Which of these methods can be implemented using while loops?
All of the methods can be implemented using while loops